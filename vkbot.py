import vk_api
from vk_api.exceptions import ApiError
from random import randrange
import difflib
import json

from data.info import relations_dict
from data import db


class Bot_back(vk_api.VkApi):

    def get_user_name(self, vk_id):
        params = {
            'user_ids': vk_id,
            'name_case': 'nom'
        }
        user = self.method('users.get', params)
        return f"{user[0]['first_name']} {user[0]['last_name']}"

    def search(self, user_object):
        users_list = []
        params = {'sex': user_object.sex,
                  'age_from': user_object.age_from,
                  'age_to': user_object.age_to,
                  'city': user_object.city,
                  'status': user_object.status,
                  'count': 1000,
                  'has_photo': 1
                  }
        search = self.method('users.search', params)
        for user in search['items']:
            if not user['is_closed']:
                users_list.append(user['id'])
        return users_list

    def get_photo(self, vk_id):
        params = {'owner_id': vk_id,
                  'album_id': 'profile',
                  'extended': 1,
                  'count': 1000,
                  'photo_sizes': 1
                  }
        return self.method('photos.get', params)

    def compare(self, photos):
        photos_list = []
        for photo in photos['items']:
            photos_list.append({'url': f"photo{photo['owner_id']}_{photo['id']}",
                                'likes': photo['likes']['count'],
                                'comments': photo['comments']['count']
                                })
        photos_list.sort(key=lambda item: item['likes'] + item['comments'], reverse=True)
        urls_list = [photo['url'] for photo in photos_list[0:3]]
        return ','.join(urls_list)

    def cities(self, city_name):
        params = {'country_id': 1,
                  'q': city_name,
                  'need_all': 0,
                  'count': 1}
        return self.method('database.getCities', params)


class Bot_front:
    def __init__(self, user_token, user_id, vk, longpoll, VkEventType):
        self.user_id = user_id
        self.name = 'name'
        self.session = db.create_connect()[0]
        self.params = self.session.query(db.User).get(self.user_id)
        self.vk = vk
        self.vk_back = Bot_back(token=user_token)
        self.longpoll = longpoll
        self.VkEventType = VkEventType

    def listen(self):
        for event in self.longpoll.listen():
            if event.type == self.VkEventType.MESSAGE_NEW:
                if event.to_me:
                    return event.text.lower()

    def write_msg(self, message=None, attach=None):
        params = {'user_id': self.user_id,
                  'message': message,
                  'random_id': randrange(10 ** 7),
                  'attachment': attach
                  }
        self.vk.method('messages.send', params)

    def change_sex(self):
        while True:
            self.write_msg("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (–º –∏–ª–∏ –∂) üíÉüï∫")
            response = self.listen()
            if response in ("–º", "–º—É–∂—Å–∫–æ–π", "–º—É–∂—á–∏–Ω–∞", "–∂", "–∂–µ–Ω—Å–∫–∏–π", "–∂–µ–Ω—â–∏–Ω–∞"):
                if response in ("–º", "–º—É–∂—Å–∫–æ–π", "–º—É–∂—á–∏–Ω–∞"):
                    self.params.sex = 2
                    self.write_msg("–ü–æ–ª –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: '–ú—É–∂—Å–∫–æ–π'")
                else:
                    self.params.sex = 1
                    self.write_msg("–ü–æ–ª –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: '–ñ–µ–Ω—Å–∫–∏–π'")
                break

    def change_age(self):
        while True:
            self.write_msg("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –≤–æ–∑—Ä–∞—Å—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–∞—á–∞–ª–æ:–∫–æ–Ω–µ—Ü) üìÖ")
            response = self.listen()
            try:
                age_from = int(response.split(':')[0])
                age_to = int(response.split(':')[1])
                if age_from <= age_to:
                    self.params.age_from = age_from
                    self.params.age_to = age_to
                    self.write_msg(f"–î–∏–∞–ø–∞–∑–æ–Ω –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: "
                                   f"'c {self.params.age_from} –¥–æ {self.params.age_to} –ª–µ—Ç'")
                    break
                else:
                    self.write_msg("–î–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ—Ç–Ω—ã (–≤–æ–∑—Ä–∞—Å—Ç '–æ—Ç' –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—à–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ '–¥–æ')")
            except ValueError:
                pass

    def change_city(self):
        self.write_msg("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ üåç")
        city = None
        while True:
            response = self.listen()
            if response in ('–¥–∞', '–≤–µ—Ä–Ω–æ', '–ø–æ—Ç–¥–≤–µ—Ä–∂–¥–∞—é', '—ç—Ç–æ –º–æ–π –≥–æ—Ä–æ–¥') and city:
                self.params.city = city['items'][0]['id']
                self.write_msg(f"–ì–æ—Ä–æ–¥ –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: '{city['items'][0]['title']}' ‚úÖ")
                break
            else:
                city = self.vk_back.cities(response)
                try:
                    self.write_msg(f"–ì–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞: '{city['items'][0]['title']}'\n"
                                   f"–í–µ—Ä–Ω–æ?")
                except IndexError:
                    self.write_msg("–£–ø—Å, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ üò∞\n"
                                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑")

    def change_relations(self):
        self.write_msg("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ üë™")
        status = ''
        while True:
            response = self.listen()
            if response in ('–¥–∞', '–≤–µ—Ä–Ω–æ', '–ø–æ—Ç–¥–≤–µ—Ä–∂–¥–∞—é') and status:
                status_num = relations_dict[status]
                if status_num // 11:
                    status_num = status_num // 11
                self.params.status = status_num
                self.write_msg(f"–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞:\n '{status.capitalize()}' ‚úÖ")
                break
            else:
                try:
                    status = difflib.get_close_matches(response, relations_dict)[0]
                except IndexError:
                    status = ''
                    available_status = '\n'.join(list(relations_dict.keys()))
                    self.write_msg("–£–ø—Å, –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É üò∞\n")
                    self.write_msg(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ–º–µ–π–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è:\n {available_status}")
                if status:
                    self.write_msg(f"–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞:\n '{status.capitalize()}'\n"
                                   f"–í–µ—Ä–Ω–æ?")

    def change_params(self):
        self.change_sex()
        self.change_age()
        self.change_city()
        self.change_relations()
        self.params.search_list = json.dumps(self.vk_back.search(self.params))
        self.update_db()
        self.write_msg("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã ‚úÖ")
        return True

    def update_db(self):
        self.session.add(self.params)
        self.session.commit()
        return True

    def show_people(self):
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞!
        –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
        &#9989; –î–∞–ª—å—à–µ => –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ —Å–ø–∏—Å–∫—É
        &#9989; –í—ã–π—Ç–∏ => –≤—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        &#9989; –õ–∞–π–∫ => –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        &#9989; –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ => –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.write_msg("–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ üîç")
        while True:
            if not self.params:
                self.write_msg("–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã üìã")
                self.params = db.User()
                self.params.id = self.user_id
                self.change_params()
            users_list = json.loads(self.params.search_list)
            if not users_list:
                self.write_msg("–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –±–æ–ª—å—à–µ –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ –í–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º üìù\n"
                               "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–æ–π: '–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã'")
                return
            user = users_list[0]
            while user in json.loads(self.params.black_list):
                users_list.pop(0)
                try:
                    user = users_list[0]
                except IndexError:
                    self.write_msg("–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –±–æ–ª—å—à–µ –º—ã –Ω–∏—á–µ–≥–æ –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ –í–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º üìù\n"
                                   "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–æ–π: '–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã'")
                    return
            photos = self.vk_back.get_photo(user)
            attach = self.vk_back.compare(photos)
            try:
                self.write_msg(attach=attach)
            except ApiError:
                pass
            self.write_msg(f"https://vk.com/id{user}")
            while True:
                response = self.listen()
                if response == '–≤—ã–π—Ç–∏':
                    return
                elif response in ['–¥–∞–ª—å—à–µ', '–ª–∞–π–∫', '—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫']:
                    if response == '–ª–∞–π–∫':
                        likes_list = json.loads(self.params.likes_list) + [user]
                        self.params.likes_list = json.dumps(likes_list)
                        self.write_msg("–õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω ‚ù§")
                    elif response == '—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫':
                        black_list = json.loads(self.params.black_list) + [user]
                        self.params.black_list = json.dumps(black_list)
                        self.write_msg("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ ‚õî")
                    users_list.pop(0)
                    self.params.search_list = json.dumps(users_list)
                    self.update_db()
                    break
                elif response == '–ø–æ–º–æ—â—å':
                    self.write_msg(self.show_people.__doc__)
                else:
                    self.write_msg("–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ üò∞\n"
                                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: '–ü–æ–º–æ—â—å', —á—Ç–æ–±—ã –≤—ã–≤–µ–∑—Ç–∏ –º–µ–Ω—é —Å –∫–æ–º–∞–Ω–¥–∞–º–∏")

    def show_likes(self):
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–∏—Å–∫–æ–º –ª–∞–π–∫–æ–≤!
        –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
        &#9989; –î–∞–ª—å—à–µ => –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ —Å–ø–∏—Å–∫—É
        &#9989; –£–¥–∞–ª–∏—Ç—å => —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –ª–∞–π–∫–æ–≤
        &#9989; –°—Ç–æ–ø => –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        likes_list = json.loads(self.params.likes_list)
        if not likes_list:
            self.write_msg("–í–∞—à —Å–ø–∏—Å–æ–∫ –ª–∞–π–∫–æ–≤ –ø—É—Å—Ç ‚ù§")
        for user in likes_list.copy():
            if not likes_list:
                self.write_msg("–í–∞—à —Å–ø–∏—Å–æ–∫ –ª–∞–π–∫–æ–≤ –ø—É—Å—Ç ‚ù§")
                return
            photos = self.vk_back.get_photo(user)
            attach = self.vk_back.compare(photos)
            try:
                self.write_msg(attach=attach)
            except ApiError:
                pass
            self.write_msg(f"https://vk.com/id{user}")
            while True:
                response = self.listen()
                if response == '–¥–∞–ª—å—à–µ' and user != likes_list[-1]:
                    break
                elif response == '–¥–∞–ª—å—à–µ' and user == likes_list[-1]:
                    self.write_msg("–ù–∞ —ç—Ç–æ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! ‚ù§\n"
                                   "–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è "
                                   "–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥–æ–π: '—Ö–≤–∞—Ç–∏—Ç'")
                elif response == '—É–¥–∞–ª–∏—Ç—å':
                    likes_list.remove(user)
                    self.params.likes_list = json.dumps(likes_list)
                    self.update_db()
                    self.write_msg("–õ–∞–π–∫ —É–±—Ä–∞–Ω!")
                    break
                elif response == '—Å—Ç–æ–ø':
                    return
                elif response == '–ø–æ–º–æ—â—å':
                    self.write_msg(self.show_likes.__doc__)
                else:
                    self.write_msg("–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ üò∞\n"
                                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: '–ü–æ–º–æ—â—å', —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é —Å –∫–æ–º–∞–Ω–¥–∞–º–∏")

    def black_list(self):
        while True:
            black_list = json.loads(self.params.black_list)
            if not black_list:
                self.write_msg("–í–∞—à —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç ‚õî")
                return
            self.write_msg("–í —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            show_black_list = [f"https://vk.com/id{user_id}" for user_id in black_list]
            self.write_msg('\n'.join(show_black_list))
            self.write_msg("–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ id\n"
                           "–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: '–í—ã–π—Ç–∏'")
            while True:
                response = self.listen()
                try:
                    response = int(response)
                except ValueError:
                    pass
                if response in black_list:
                    black_list.remove(response)
                    self.params.black_list = json.dumps(black_list)
                    self.update_db()
                    self.write_msg(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: https://vk.com/id{response} \n"
                                   f"–£—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏–∫–∞")
                    break
                elif response == '–≤—ã–π—Ç–∏':
                    return
                else:
                    self.write_msg("–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ üò∞\n")

    def run(self):
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é!
        –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
        &#9989; –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã => –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞
        &#9989; –ü–æ–∫–∞–∑–∞—Ç—å –ª–∞–π–∫–∏ => –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ª–∞–π–∫–æ–≤
        &#9989; –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ => –Ω–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
        &#9989; –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ => –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        &#9989; –ü–æ–º–æ—â—å => –≤—ã–∑–æ–≤ –º–µ–Ω—é —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–∞–π–∫–æ–≤
        &#9989; –ü–æ–∫–∞ => –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
        self.name = self.vk_back.get_user_name(self.user_id)
        self.write_msg(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {self.name} –≤ VKinder üôã‚Äç‚ôÄÔ∏è\n"
                       f"–î–ª—è –≤—ã–∑–æ–≤–∞ –ø–æ–º–æ—â–∏ –Ω–∞–ø–∏—à–∏: '–ü–æ–º–æ—â—å'")
        while True:
            response = self.listen()
            if response == '–ø–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã':
                self.write_msg(f"–í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {self.params}")
            elif response == '–∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã':
                self.change_params()
            elif response == '–ø–æ–∫–∞–∑–∞—Ç—å –ª–∞–π–∫–∏':
                self.show_likes()
                self.write_msg("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            elif response == '–Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫':
                self.show_people()
                self.write_msg("–ü–æ–∏—Å–∫ –æ–∫–æ–Ω—á–µ–Ω.\n"
                               "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            elif response == '—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫':
                self.black_list()
                self.write_msg("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            elif response == '–ø–æ–º–æ—â—å':
                self.write_msg(self.run.__doc__)
            elif response == '–ø–æ–∫–∞':
                self.write_msg("–†–∞–±–æ—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"
                               "–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ!")
                break
            else:
                self.write_msg("–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ üò∞\n"
                               "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: '–ü–æ–º–æ—â—å', —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é —Å –∫–æ–º–∞–Ω–¥–∞–º–∏")
